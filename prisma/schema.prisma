generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// enum Role {
//   ADMIN
//   MEMBER
// }

model User {
  id            String   @id @default(cuid())
  name          String
  email         String   @unique
  avatar_url    String?
  status        String   @default("active")
  phone         String?
  password_hash String
  // role          Role     @default(MEMBER)
  created_at    DateTime @default(now())
  updated_at    DateTime @updatedAt

  transactions Transaction[]

  @@map("users")
}

model Producers {
  id          String            @id @default(cuid())
  name        String
  cpf         String            @unique
  phone       String?
  group       String?
  farm        String?
  email       String?
  address     String?
  city        String?
  state       String?
  active      Boolean           @default(true)
  created_at  DateTime          @default(now())
  updated_at  DateTime          @updatedAt

  BankAccount ProducerAccount[]
  Transaction Transaction[]
  Farm        Farm[]

  @@map("producers")
}

model Farm {
  id           String  @id @default(cuid())
  name         String
  city         String
  hectares     Int
  latitude     Decimal
  longitude    Decimal
  producer_id String
  active       Boolean  @default(true)
  created_at   DateTime @default(now())
  updated_at   DateTime @updatedAt

  producer Producers @relation(fields: [producer_id], references: [id])

  @@map("farms")
}

model ProducerAccount {
  id          String   @id @default(cuid())
  name        String
  description String?
  banco       String
  conta       String
  balance     Float    @default(0)
  active      Boolean  @default(true)
  producer_id String
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt

  producer Producers @relation(fields: [producer_id], references: [id])

  @@map("producer_account")
}

model Transaction {
  id          String   @id @default(cuid())
  date        DateTime
  nome        String
  valor       Float
  confirmed   Boolean  @default(false)
  conta       String
  banco       String?
  tipo        String?
  categoria   Int?
  imported    Boolean  @default(false)
  conciliado  Boolean  @default(false)
  user_id     String
  producer_id String?
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt

  producer Producers? @relation(fields: [producer_id], references: [id])
  user     User       @relation(fields: [user_id], references: [id])

  @@map("transactions")
}

model Category {
  code        Int        @id @unique
  level       Int
  description String
  type        String?
  parent_id   Int?

  @@map("categories")
}

model Customer {
  id                String   @id @default(cuid())
  name              String
  cpf               String   @unique
  phone             String?
  email             String?
  address           String?
  stateRegistration String?
  city              String?
  state             String?
  active            Boolean  @default(true)
  created_at        DateTime @default(now())
  updated_at        DateTime @updatedAt

  @@map("cutomers")
}

model Supplier {
  id                String   @id @default(cuid())
  name              String
  cpf               String   @unique
  phone             String?
  email             String?
  address           String?
  stateRegistration String?
  city              String?
  state             String?
  active            Boolean  @default(true)
  created_at        DateTime @default(now())
  updated_at        DateTime @updatedAt

  @@map("suppliers")
}
